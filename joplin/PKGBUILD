# Maintainer: Alfredo Palhares <alfredo at palhares dot me>
# Contributor: Mark Wagie <mark dot wagie at tutanota dot com>

# Please contribute to:
# https://github.com/alfredopalhares/arch-pkgbuilds

pkgbase="joplin"
pkgname=('joplin' 'joplin-cli' 'joplin-desktop' 'joplin-desktop-electron')
pkgver=1.4.19
#groups=('joplin')
pkgrel=12
install="joplin.install"
depends=('electron' 'gtk3' 'libexif' 'libgsf' 'libjpeg-turbo' 'libwebp' 'libxss' 'nodejs'
         'nss' 'orc' 'rsync' )
optdepends=('libappindicator-gtk3: for tray icon')
arch=('x86_64' 'i686')
makedepends=('git' 'npm' 'python' 'rsync' 'electron' 'jq')
url="https://joplinapp.org/"
license=('MIT')
source=("joplin.desktop" "joplin-desktop.sh"
        "joplin-${pkgver}.tar.gz::https://github.com/laurent22/joplin/archive/v${pkgver}.tar.gz")
sha256sums=('c7c5d8b0ff9edb810ed901ea21352c9830bfa286f3c18b1292deca5b2f8febd2'
            '173ba908359daf976fb807a48b65beb372971801a6f87b397a0301b68f73c056'
            '55aad4fe50e2da980983a69bc7c0870626064db971550d522e266feb17d38916')

# local npm cache directory
_npm_cache="npm-cache"

_get_cache() {
  if [[ "${_npm_cache}" =~ ^/ ]]; then
    printf "%s" "${_npm_cache}"
  else
    printf "%s" "${srcdir}/${_npm_cache}"
  fi
}

prepare() {
  local cache=$(_get_cache)
  msg2 "npm cache directory: $cache"

  # TODO why disabling husky?
  msg2 "Disabling husky (git hooks)"
  sed -i '/"husky": ".*"/d' "${srcdir}/joplin-${pkgver}/package.json"

  msg2 "Tweaking lerna.json"
  local tmp_json="$(mktemp --tmpdir="$srcdir")"
  local lerna_json="${srcdir}/joplin-${pkgver}/lerna.json"
  jq ".packages = [\"packages/app-cli\", \"packages/app-desktop\", \"packages/lib\", \"packages/renderer\", \"packages/tools\"] |
      . += {\"npmClient\": \"npm\", \"npmClientArgs\": [\"--cache $cache\"]}" "$lerna_json" > "$tmp_json"
  cat "$tmp_json" > "$lerna_json"
  rm "$tmp_json"
}

build() {
  local cache=$(_get_cache)
  msg2 "npm cache directory: $cache"

  cd "${srcdir}/joplin-${pkgver}"

  # Force Lang
  # INFO: https://github.com/alfredopalhares/joplin-pkgbuild/issues/25
  export LANG=en_US.utf8

  msg2 "Installing dependencies through Lerna"
  npm install --cache "$cache"

  msg2 "Building CLI"
  cd "${srcdir}/joplin-${pkgver}/packages/app-cli"
  npm run build

  local electron_dir="/usr/lib/electron"
  local electron_version=$(cat /usr/lib/electron/version)
  msg2 "Packaged Electron $electron_version ($electron_dir)"

  msg2 "Building Desktop"
  cd "${srcdir}/joplin-${pkgver}/packages/app-desktop"
  USE_HARD_LINKS=false npm --cache "$cache" run dist -- \
    --publish=never --linux --x64 --dir="dist/" \
    -c.electronDist="$electron_dir" -c.electronVersion="$electron_version"
}

package_joplin() {
  pkgdesc="A note taking and to-do application with synchronization capabilities - CLI and Desktop Version"
  depends=('joplin-cli' 'joplin-desktop')
}

package_joplin-cli() {
  pkgdesc="A note taking and to-do application with synchronization capabilities - CLI App"
  depends=('coreutils' 'libsecret' 'nodejs' 'python')

  local cache=$(_get_cache)
  msg2 "npm cache directory: $cache"

  msg2 "Packaging CLI"
  cd "${srcdir}/joplin-${pkgver}/packages/app-cli/build"
  local pack="$(npm pack | tail -n 1)"
  
  msg2 "Installing CLI ($pack)"
  npm install --global --production --user root --cache "$cache" \
    --prefix "${pkgdir}/usr" "$pack"

  # Non-deterministic race in npm gives 777 permissions to random directories.
  # See https://github.com/npm/cli/issues/1103 for details.
  find "${pkgdir}/usr" -type d -exec chmod 755 {} +

  # Remove references to $pkgdir
  find "$pkgdir" -name package.json -print0 | xargs -0 sed -i "/_where/d"

  # Remove references to $srcdir
  local tmppackage="$(mktemp --tmpdir="$srcdir")"
  local pkgjson="$pkgdir/usr/lib/node_modules/joplin/package.json" # TODO joplin name
  jq '.|=with_entries(select(.key|test("_.+")|not))' "$pkgjson" > "$tmppackage"
  mv "$tmppackage" "$pkgjson"
  chmod 644 "$pkgjson"

  # npm gives ownership of ALL FILES to build user
  # https://bugs.archlinux.org/task/63396
  chown -R root:root "${pkgdir}"

  msg2 "Installing license"
  install -Dm644 "${srcdir}/joplin-${pkgver}/LICENSE" -t "${pkgdir}/usr/share/licenses/${pkgname}/"
}


package_joplin-desktop() {
  pkgdesc="A note taking and to-do application with synchronization capabilities - Desktop"
  depends=('electron' 'gtk3' 'libexif' 'libgsf' 'libjpeg-turbo' 'libwebp' 'libxss' 'nodejs'
         'nss' 'orc')
  optdepends=('libappindicator-gtk3: for tray icon')
  conflicts=('joplin-desktop-electron')
  replaces=('joplin-desktop-electron')

  msg2 "Installing Desktop"
  install -Dm644 \
    "${srcdir}/joplin-${pkgver}/packages/app-desktop/dist/linux-unpacked/resources/app.asar" \
    "${pkgdir}/usr/lib/${pkgname}.asar"
  # TODO install app.asar.unpacked/ ???

  msg2 "Installing license"
  install -Dm644 "${srcdir}/joplin-${pkgver}/LICENSE" -t "${pkgdir}/usr/share/licenses/${pkgname}/"

  msg2 "Installing startup script and desktop file"
  install -Dm755 "${srcdir}/joplin-desktop.sh" "${pkgdir}/usr/bin/joplin-desktop"
  install -Dm644 "${srcdir}/joplin.desktop" -t "${pkgdir}/usr/share/applications"
  
  msg2 "Installing icons"
  local -r src_icon_dir="${srcdir}/joplin-${pkgver}/packages/app-desktop/build/icons"
  local -i size
  for size in 16 22 24 32 36 48 64 72 96 128 192 256 512; do
    [[ -f "${src_icon_dir}/${size}x${size}.png" ]] &&
      install -Dm644 \
        "${src_icon_dir}/${size}x${size}.png" \
        "${pkgdir}/usr/share/icons/hicolor/${size}x${size}/apps/joplin.png"
  done
}

package_joplin-desktop-electron() {
  pkgdesc="DEPRECATED - A note taking and to-do application with synchronization capabilities"
  depends=('joplin-desktop')
}

